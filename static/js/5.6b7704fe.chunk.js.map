{"version":3,"sources":["everything/CrudApi.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","CrudApi","useState","data","setData","open","setOpen","axios","defaults","baseURL","useEffect","get","then","result","onAddData","e","a","preventDefault","request","id","title","formus","values","properties","post","response","concat","console","log","deleteData","delete","newData","filter","datas","etitle","eproperties","notess","setNotess","onChange","target","name","value","EditData","indexx","person","index","findIndex","patch","removed","splice","useFormik","initialValues","className","onSubmit","type","placeholder","handleChange","component","Paper","sx","minWidth","align","map","onClick","openModal","onClose"],"mappings":"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","file":"static/js/5.6b7704fe.chunk.js","sourcesContent":["import { useFormik } from 'formik'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst CrudApi = () => {\r\n    const [data, setData] = useState([]) \r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => setOpen(false);\r\n\r\n  \r\n   \r\n    axios.defaults.baseURL = \"http://localhost:3050\"\r\n   \r\n    //getting data\r\n    useEffect(() => {\r\n     axios.get(`/heavenlybodies`)\r\n     .then((result)=>setData(result.data))\r\n    },[])\r\n\r\n\r\n    //adding data\r\n    const onAddData =async(e)=> {\r\n        e.preventDefault()\r\n        const request ={\r\n            id: data.id,\r\n            title:formus.values.title,\r\n            properties:formus.values.properties\r\n        }\r\n        const response = await axios.post(`/heavenlybodies`,request)\r\n        setData(data.concat(response.data))\r\n        console.log(response.data)\r\n        console.log(data)\r\n    }\r\n         \r\n    //deleting data\r\n     const deleteData = async(id)=>{\r\n         await axios.delete(`/heavenlybodies/${id}`)\r\n         const newData = data.filter((datas)=>{\r\n            return datas.id !== id\r\n         })\r\n         setData(newData)\r\n     }\r\n\r\n\r\n\r\n     //editing data\r\n     const [notess, setNotess] = useState({id:\"\",etitle:\"\", eproperties:\"\"});\r\n     const onChange =(e)=>{\r\n         setNotess({...notess,[e.target.name]: e.target.value})\r\n     }\r\n\r\n\r\n     const openModal = (result) => {\r\n         console.log(result)\r\n         setOpen(true)\r\n         setNotess({id:result.id,etitle:result.title, eproperties:result.properties})\r\n         console.log(result.id,result.title,result.properties)\r\n     };\r\n\r\n     const EditData = async (id,title,properties)=>{\r\n            // console.log(data)\r\n            // console.log(newNotes)\r\n            const indexx =(person)=>{\r\n                return person.id === id\r\n            }\r\n            var index = data.findIndex(indexx)\r\n            var request = {\r\n               id:data[index].id=id,\r\n               title:data[index].title=title,\r\n               properties: data[index].properties=properties,}\r\n            \r\n      \r\n         axios.patch(`/heavenlybodies/${id}`,request)\r\n            const removed = data.splice(index,1,request)\r\n            console.log(removed)\r\n            setData(data)\r\n   \r\n            \r\n     }\r\n\r\n\r\n\r\n     const editData =(e)=>{\r\n         e.preventDefault()\r\n        EditData(notess.id,notess.etitle,notess.eproperties)\r\n     }\r\n\r\n\r\n\r\n     //using formik \r\n     const initialValues = {\r\n        title: '',\r\n        properties: '',\r\n    }\r\n    const formus = useFormik({\r\n        initialValues,\r\n        onAddData\r\n    })\r\n\r\n  \r\n\r\n    return (\r\n        <>\r\n        <div className=\"crudapi\">\r\n            <div className=\"addbodies\">\r\n                <form onSubmit={onAddData} >\r\n                    <div className=\"text\">\r\n                        <input type=\"text\" name=\"title\" placeholder=\"Star Name\" value={formus.values.title} onChange={formus.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"text\">\r\n                        <input  type=\"text\" name=\"properties\" placeholder=\"It's Specialities\" value={formus.values.properties} onChange={formus.handleChange} />\r\n                    </div>\r\n\r\n                    <div >\r\n                         {/* <button className=\"addbutton\" onClick={getData}>get</button> */}\r\n                         <button className=\"addbutton\" type=\"submit\" >ADD</button>\r\n                         {/* <button className=\"addbutton\" onClick={handleAddApi}>ADD</button> */}\r\n                    </div>\r\n                </form>\r\n\r\n                <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 500 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className=\"headings\">ID</TableCell>\r\n                                    <TableCell className=\"headings\" align=\"right\">Title</TableCell>\r\n                                    <TableCell className=\"headings\" align=\"right\" >Properties</TableCell> \r\n                                    <TableCell className=\"headings\" align=\"right\" >Action</TableCell> \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {data.map((result)=>(\r\n                                <TableRow key={result.id}>\r\n                                    <TableCell >{result.id}</TableCell>\r\n                                    <TableCell align=\"right\">{result.title}</TableCell>\r\n                                    <TableCell align=\"right\">{result.properties}</TableCell>\r\n                                     <TableCell  align=\"right\"><DeleteIcon onClick={()=>deleteData(result.id)}/>\r\n                                     <EditIcon onClick={()=>openModal(result)}/></TableCell>\r\n                                </TableRow>\r\n                                    ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                </TableContainer>\r\n                      \r\n            </div>\r\n        </div>\r\n                        <div>\r\n                                    <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                                        <Box sx={style}>\r\n                                        <form onSubmit={(index)=>editData(index)} >\r\n                                            <div className=\"text\">\r\n                                                <input type=\"text\" name=\"etitle\" placeholder=\"Edit Star Name\" value={notess.etitle} onChange={onChange} />\r\n                                            </div>\r\n\r\n                                            <div className=\"text\">\r\n                                                <input  type=\"text\" name=\"eproperties\" placeholder=\"Edit It's Specialities\" value={notess.eproperties} onChange={onChange} />\r\n                                            </div>\r\n\r\n                                            <div >\r\n                                                {/* <button className=\"addbutton\" onClick={getData}>get</button> */}\r\n                                                <button className=\"addbutton\" type=\"submit\" >EDIT</button>\r\n                                                {/* <button className=\"addbutton\" onClick={handleAddApi}>ADD</button> */}\r\n                                            </div>\r\n                                        </form>\r\n                                        </Box>\r\n                                    </Modal>\r\n                        </div>\r\n        </>\r\n           )\r\n}\r\nexport default CrudApi\r\n"],"sourceRoot":""}